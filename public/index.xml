<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>sal.as</title>
    <link>/</link>
    <description>Recent content on sal.as</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 20 Aug 2017 21:38:52 +0800</lastBuildDate>
    
	<atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>About</title>
      <link>/about/</link>
      <pubDate>Sun, 20 Aug 2017 21:38:52 +0800</pubDate>
      
      <guid>/about/</guid>
      <description>Hugo is a static site engine written in Go.
It makes use of a variety of open source projects including:
 Cobra Viper J Walter Weatherman Cast  Learn more and contribute on GitHub.</description>
    </item>
    
    <item>
      <title>dynamo_combined</title>
      <link>/post/dynamo_combined/</link>
      <pubDate>Mon, 09 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/dynamo_combined/</guid>
      <description>&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>notebook test</title>
      <link>/post/notebook-test/</link>
      <pubDate>Mon, 09 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/notebook-test/</guid>
      <description>&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>This is a notebook.</title>
      <link>/post/noest/</link>
      <pubDate>Thu, 08 Mar 2018 17:40:19 +0800</pubDate>
      
      <guid>/post/noest/</guid>
      <description> Title Sub title code print(&#39;hello&#39;)  print(&#39;sup globe&#39;)  sup globe  print(&#39;another test&#39;)  another test  </description>
    </item>
    
    <item>
      <title>Another notebook</title>
      <link>/post/dynaned/</link>
      <pubDate>Tue, 30 Aug 2016 16:01:23 +0800</pubDate>
      
      <guid>/post/dynaned/</guid>
      <description>import pandas as pd import numpy as np  ls data/sports_scores/  [0m[01;32mastros_1A10.csv[0m* [01;32mRice_10H80.csv[0m* [01;32mTex_15E40.csv[0m* [01;32mdynamo_10H30.csv[0m* [01;32mrockets_1A10.csv[0m* [01;32mUH_10H50.csv[0m*  ls data/crime_beats/  [0m[01;32mcrime_10H30_10_17.csv[0m* [01;32mcrime_10H80_10_17.csv[0m* [01;32mcrime_1A10_10_17.csv[0m* [01;32mcrime_10H50_10_17.csv[0m* [01;32mcrime_15E40_10_17.csv[0m*  games = &#39;data/sports_scores/dynamo_10H30.csv&#39; crime = &#39;data/crime_beats/crime_10H30_10_17.csv&#39;  scores dataframes df = pd.read_csv(games,index_col=&#39;full_date&#39;).sort_index(ascending=True) ## win column df[&#39;win&#39;] = np.where(df[&#39;home_score&#39;] &amp;gt; df[&#39;away_score&#39;],1,0) # only oposing name and win boolean df = df[[&#39;away_team&#39;,&#39;win&#39;]] # show df.head()   .dataframe tbody tr th:only-of-type { vertical-align: middle; } .</description>
    </item>
    
    <item>
      <title>Install Windows Subsystem for Linux</title>
      <link>/post/install-windows-subsystem-for-linux/</link>
      <pubDate>Sat, 09 Jul 2016 00:00:00 +0000</pubDate>
      
      <guid>/post/install-windows-subsystem-for-linux/</guid>
      <description>&lt;h2 id=&#34;whaaa&#34;&gt;Whaaa..&lt;/h2&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Math Latex Examples</title>
      <link>/post/math-latex-examples/</link>
      <pubDate>Tue, 09 Feb 2016 00:00:00 +0000</pubDate>
      
      <guid>/post/math-latex-examples/</guid>
      <description>&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Sup Globe</title>
      <link>/post/sup-globe/</link>
      <pubDate>Sat, 09 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>/post/sup-globe/</guid>
      <description>&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>